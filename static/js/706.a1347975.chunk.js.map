{"version":3,"file":"static/js/706.a1347975.chunk.js","mappings":"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","sources":["components/base/input/InputPasswordToggle.js","pages/AuthenticationPage.js","pages/SignInPage.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Input from './Input';\r\nimport IconEyeOpen from '../icons/IconEyeOpen';\r\nimport IconEyeClose from '../icons/IconEyeClose';\r\n\r\nconst InputPasswordToggle = ({ control }) => {\r\n    const [togglePassword, setTogglePassword] = useState(false);\r\n    if (!control) return null;\r\n    return (\r\n        <Fragment>\r\n            <Input name='password'\r\n                type={togglePassword ? \"text\" : \"password\"}\r\n                placeholder=\"Enter your password\"\r\n                control={control}\r\n            >\r\n                {togglePassword ?\r\n                    <IconEyeOpen onClick={() => setTogglePassword(!togglePassword)} /> :\r\n                    <IconEyeClose onClick={() => setTogglePassword(!togglePassword)} />}\r\n            </Input>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputPasswordToggle;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst AuthenticationPageStyles = styled.div`\r\n    min-height: 100vh;\r\n    padding: 40px;\r\n    .logo{\r\n        margin: 0 auto 20px;\r\n    }\r\n    .heading{\r\n        text-align: center;\r\n        color: ${props => props.theme.primary};;\r\n        font-weight: bold;\r\n        font-size: 40;\r\n        margin-bottom: 24px;\r\n    }\r\n    .form{\r\n        max-width: 500px;\r\n        margin: 0 auto;\r\n    }\r\n    .have-account{\r\n        margin-top: 14px;\r\n        margin-bottom: 10;\r\n        a{\r\n            display: inline-block;\r\n            color: ${props => props.theme.primary};\r\n            font-weight: 500;\r\n        }\r\n    }\r\n`;\r\nconst AuthenticationPage = ({ children }) => {\r\n    return (\r\n        <AuthenticationPageStyles>\r\n            <div className='container'>\r\n                <NavLink to='/'>\r\n                    <img srcSet='./logo.png 3x' alt='logo' className='logo' />\r\n                    <h1 className='heading'>Blogging App</h1>\r\n                </NavLink>\r\n                {children}\r\n            </div>\r\n        </AuthenticationPageStyles>\r\n    );\r\n};\r\n\r\nexport default AuthenticationPage;","import React, { useEffect } from 'react';\r\nimport { useAuth } from '../contexts/auth-context';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport AuthenticationPage from './AuthenticationPage';\r\nimport { Button, Field, Input, Label } from '../components';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { toast } from 'react-toastify';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../firebase/firebase-config';\r\nimport InputPasswordToggle from '../components/base/input/InputPasswordToggle';\r\n\r\n\r\nconst schema = yup.object({\r\n    email: yup.string().email().required(\"Please enter your email!\"),\r\n    password: yup.string().min(8, \"Your password must be at least 8 characters\").required(\"Please enter your password!\"),\r\n}).required();\r\nconst SignInPage = () => {\r\n    const { userInfo } = useAuth();\r\n    const navigate = useNavigate();\r\n    const { control, handleSubmit, formState: {\r\n        errors, isValid, isSubmitting\r\n    } } = useForm({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver(schema)\r\n    })\r\n    useEffect(() => {\r\n        document.title = \"Login page\"\r\n        if (userInfo?.email) navigate(\"/\")\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    const handleSignIn = async (values) => {\r\n        if (!isValid) return;\r\n        await signInWithEmailAndPassword(auth, values.email, values.password);\r\n        navigate(\"/\");\r\n    }\r\n    useEffect(() => {\r\n        const arrErrors = Object.values(errors)\r\n        if (arrErrors.length > 0) {\r\n            toast.error(arrErrors[0]?.message, {\r\n                pauseOnHover: false,\r\n            })\r\n        }\r\n    }, [errors])\r\n    return (\r\n        <AuthenticationPage>\r\n            <form className='form' onSubmit={handleSubmit(handleSignIn)} autoComplete='off'>\r\n                <Field>\r\n                    <Label htmlFor='email'>Email</Label>\r\n                    <Input name='email'\r\n                        type='email'\r\n                        placeholder=\"Enter your email\"\r\n                        control={control}\r\n                    />\r\n                </Field>\r\n                <Field>\r\n                    <Label htmlFor='password'>Password</Label>\r\n                    <InputPasswordToggle control={control}></InputPasswordToggle>\r\n                </Field>\r\n                <Button\r\n                    type='submit'\r\n                    isLoading={isSubmitting}\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                <div className='have-account'>\r\n                    <p>You don't have an account? <NavLink to={\"/sign-up\"}>Register.</NavLink></p>\r\n                </div>\r\n            </form>\r\n        </AuthenticationPage>\r\n    );\r\n};\r\n\r\nexport default SignInPage;"],"names":["_ref","control","_useState","useState","_useState2","_slicedToArray","togglePassword","setTogglePassword","_jsx","Fragment","children","Input","name","type","placeholder","IconEyeOpen","onClick","IconEyeClose","AuthenticationPageStyles","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","primary","_jsxs","className","NavLink","to","srcSet","alt","schema","yup","email","required","password","min","userInfo","useAuth","navigate","useNavigate","_useForm","useForm","mode","resolver","yupResolver","handleSubmit","_useForm$formState","formState","errors","isValid","isSubmitting","useEffect","document","title","_arrErrors$","arrErrors","Object","values","length","toast","error","message","pauseOnHover","AuthenticationPage","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","signInWithEmailAndPassword","auth","stop","apply","arguments","autoComplete","Field","Label","htmlFor","InputPasswordToggle","Button","isLoading","disabled"],"sourceRoot":""}