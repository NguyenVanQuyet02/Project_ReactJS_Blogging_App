{"version":3,"file":"static/js/588.374fed59.chunk.js","mappings":"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","sources":["components/module/post/PostItem.js","pages/AuthorPage.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostCategory from \"./PostCategory\";\r\nimport PostTitle from \"./PostTitle\";\r\nimport PostMeta from \"./PostMeta\";\r\nimport PostImg from \"./PostImg\";\r\nimport slugify from \"slugify\";\r\nconst PostItemStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .post {\r\n    &-image {\r\n      height: 202px;\r\n      margin-bottom: 20px;\r\n      display: block;\r\n      width: 100%;\r\n      border-radius: 16px;\r\n    }\r\n    &-category {\r\n      margin-bottom: 16px;\r\n    }\r\n    &-title {\r\n      margin-bottom: 8px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ data = {} }) => {\r\n  if (!data) return null;\r\n  const date = data?.createdAt?.seconds ? new Date(data?.createdAt?.seconds * 1000) : new Date();\r\n  const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\r\n  return (\r\n    <PostItemStyles>\r\n      <PostImg to={data?.slug} url={data.image}></PostImg>\r\n      {data?.category?.name && <PostCategory to={data?.category.slug}>{data?.category.name}</PostCategory>}\r\n      <PostTitle to={data?.slug}>\r\n        {data.title}\r\n      </PostTitle>\r\n      <PostMeta\r\n        to={slugify(data?.user?.username || \"\", { lower: true })}\r\n        authorName={data?.user?.fullname}\r\n        date={formatDate}\r\n      ></PostMeta>\r\n    </PostItemStyles>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Heading, Layout } from '../components';\r\nimport PostItem from '../components/module/post/PostItem';\r\nimport { useParams } from 'react-router-dom';\r\nimport { collection, onSnapshot, query, where } from 'firebase/firestore';\r\nimport { db } from '../firebase/firebase-config';\r\n\r\nconst AuthorPage = () => {\r\n    const params = useParams();\r\n    const [posts, setPosts] = useState({});\r\n    //get data post\r\n    useEffect(() => {\r\n        async function getDataPost() {\r\n            const docRef = query(collection(db, \"posts\"), where(\"user.username\", \"==\", params.slug));\r\n            onSnapshot(docRef, snapshot => {\r\n                let results = [];\r\n                snapshot.forEach(doc => {\r\n                    results.push({\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    })\r\n                });\r\n                setPosts(results);\r\n            })\r\n        }\r\n        getDataPost();\r\n    }, [params.slug]);\r\n    if (!posts) return null;\r\n    return (\r\n        <Layout>\r\n            <div className='container'>\r\n                <div className='pt-10'></div>\r\n                <Heading>Author: {posts[0]?.user?.fullname || \"\"}</Heading>\r\n                <div className=\"grid-layout grid-layout--primary\">\r\n                    {posts?.length > 0 && posts.map(item => (\r\n                        <PostItem data={item} key={item.id}></PostItem>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AuthorPage;"],"names":["PostItemStyles","styled","div","_templateObject","_taggedTemplateLiteral","_ref","_data$createdAt","_data$createdAt2","_data$category","_data$user","_data$user2","_ref$data","data","date","createdAt","seconds","Date","formatDate","toLocaleDateString","_jsxs","children","_jsx","PostImg","to","slug","url","image","category","name","PostCategory","PostTitle","title","PostMeta","slugify","user","username","lower","authorName","fullname","_posts$","_posts$$user","params","useParams","_useState","useState","_useState2","_slicedToArray","posts","setPosts","useEffect","_getDataPost","_asyncToGenerator","_regeneratorRuntime","mark","_callee","docRef","wrap","_context","prev","next","query","collection","db","where","onSnapshot","snapshot","results","forEach","doc","push","_objectSpread","id","stop","apply","arguments","getDataPost","Layout","className","Heading","length","map","item","PostItem"],"sourceRoot":""}